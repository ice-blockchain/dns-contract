
(int, int) load_data() inline {
    slice ds = get_data().begin_parse();
    return (ds~load_uint(256), ds~load_uint(8));
}

(int, cell) dnsresolve(slice subdomain, int category) method_id {
    throw_unless(70, mod(slice_bits(subdomain), 8) == 0);

    int starts_with_zero_byte = subdomain.preload_int(8) == 0;

    int subdomain_len = slice_bits(subdomain);

    if (starts_with_zero_byte & (subdomain_len == 8)) { ;; "." requested
        (int adnl, int flags) = load_data();
        cell result = begin_cell()
                        .store_uint(0xad01, 16)
                        .store_uint(adnl, 256)
                        .store_uint(flags, 8)
                        .end_cell();
        return (8, result); ;; resolved, returns current record
    }

    return (0, null()); ;; domain cannot be resolved
}

() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {
}
